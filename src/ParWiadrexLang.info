-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ParWiadrexLang.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListInit                                (4)
	ListInit -> Init                                   (5)
	ListInit -> Init ListInit                          (6)
	Arg -> Ident ':' Type                              (7)
	Arg -> 'var' Ident ':' Type                        (8)
	ListArg ->                                         (9)
	ListArg -> Arg                                     (10)
	ListArg -> Arg ',' ListArg                         (11)
	Init -> 'fun' Ident '(' ListArg ')' ':' Type Block   (12)
	Init -> 'var' Ident ':' Type '=' Expr ';'          (13)
	Block -> '{' ListStmt '}'                          (14)
	Stmt -> ';'                                        (15)
	Stmt -> Block                                      (16)
	Stmt -> Init                                       (17)
	Stmt -> Ident '=' Expr ';'                         (18)
	Stmt -> Ident '++' ';'                             (19)
	Stmt -> Ident '--' ';'                             (20)
	Stmt -> 'return' Expr ';'                          (21)
	Stmt -> 'return' ';'                               (22)
	Stmt -> 'if' '(' Expr ')' Block                    (23)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (24)
	Stmt -> 'while' '(' Expr ')' Block                 (25)
	Stmt -> Expr ';'                                   (26)
	ListStmt ->                                        (27)
	ListStmt -> Stmt ListStmt                          (28)
	Type -> 'Int'                                      (29)
	Type -> 'String'                                   (30)
	Type -> 'Bool'                                     (31)
	Type -> 'Void'                                     (32)
	Type -> Ident                                      (33)
	Type -> '(' ListType ')' '->' Type                 (34)
	ListType ->                                        (35)
	ListType -> Type                                   (36)
	ListType -> Type ',' ListType                      (37)
	Expr6 -> Ident                                     (38)
	Expr6 -> Integer                                   (39)
	Expr6 -> 'True'                                    (40)
	Expr6 -> 'False'                                   (41)
	Expr6 -> Ident '(' ListExpr ')'                    (42)
	Expr6 -> String                                    (43)
	Expr6 -> '(' Expr ')'                              (44)
	Expr5 -> '-' Expr6                                 (45)
	Expr5 -> '!' Expr6                                 (46)
	Expr5 -> Expr6                                     (47)
	Expr4 -> Expr4 MulOp Expr5                         (48)
	Expr4 -> Expr5                                     (49)
	Expr3 -> Expr3 AddOp Expr4                         (50)
	Expr3 -> Expr4                                     (51)
	Expr2 -> Expr2 RelOp Expr3                         (52)
	Expr2 -> Expr3                                     (53)
	Expr1 -> Expr2 '&&' Expr1                          (54)
	Expr1 -> Expr2                                     (55)
	Expr -> Expr1 '||' Expr                            (56)
	Expr -> 'new' Ident '(' ListExpr ')'               (57)
	Expr -> 'lambda' '(' ListArg ')' '=>' Block        (58)
	Expr -> Expr1                                      (59)
	ListExpr ->                                        (60)
	ListExpr -> Expr                                   (61)
	ListExpr -> Expr ',' ListExpr                      (62)
	AddOp -> '+'                                       (63)
	AddOp -> '-'                                       (64)
	MulOp -> '*'                                       (65)
	MulOp -> '/'                                       (66)
	MulOp -> '%'                                       (67)
	RelOp -> '<'                                       (68)
	RelOp -> '<='                                      (69)
	RelOp -> '>'                                       (70)
	RelOp -> '>='                                      (71)
	RelOp -> '=='                                      (72)
	RelOp -> '!='                                      (73)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'->'           { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	':'            { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'=>'           { PT _ (TS _ 21) }
	'>'            { PT _ (TS _ 22) }
	'>='           { PT _ (TS _ 23) }
	'Bool'         { PT _ (TS _ 24) }
	'False'        { PT _ (TS _ 25) }
	'Int'          { PT _ (TS _ 26) }
	'String'       { PT _ (TS _ 27) }
	'True'         { PT _ (TS _ 28) }
	'Void'         { PT _ (TS _ 29) }
	'else'         { PT _ (TS _ 30) }
	'fun'          { PT _ (TS _ 31) }
	'if'           { PT _ (TS _ 32) }
	'lambda'       { PT _ (TS _ 33) }
	'new'          { PT _ (TS _ 34) }
	'return'       { PT _ (TS _ 35) }
	'var'          { PT _ (TS _ 36) }
	'while'        { PT _ (TS _ 37) }
	'{'            { PT _ (TS _ 38) }
	'||'           { PT _ (TS _ 39) }
	'}'            { PT _ (TS _ 40) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	ListInit        rules 5, 6
	Arg             rules 7, 8
	ListArg         rules 9, 10, 11
	Init            rules 12, 13
	Block           rule  14
	Stmt            rules 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26
	ListStmt        rules 27, 28
	Type            rules 29, 30, 31, 32, 33, 34
	ListType        rules 35, 36, 37
	Expr6           rules 38, 39, 40, 41, 42, 43, 44
	Expr5           rules 45, 46, 47
	Expr4           rules 48, 49
	Expr3           rules 50, 51
	Expr2           rules 52, 53
	Expr1           rules 54, 55
	Expr            rules 56, 57, 58, 59
	ListExpr        rules 60, 61, 62
	AddOp           rules 63, 64
	MulOp           rules 65, 66, 67
	RelOp           rules 68, 69, 70, 71, 72, 73

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'fun'          shift, and enter state 6
	'var'          shift, and enter state 7

	Program        goto state 3
	ListInit       goto state 4
	Init           goto state 5

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	Program -> ListInit .                               (rule 4)

	%eof           reduce using rule 4


State 5

	ListInit -> Init .                                  (rule 5)
	ListInit -> Init . ListInit                         (rule 6)

	'fun'          shift, and enter state 6
	'var'          shift, and enter state 7
	%eof           reduce using rule 5

	ListInit       goto state 10
	Init           goto state 5

State 6

	Init -> 'fun' . Ident '(' ListArg ')' ':' Type Block    (rule 12)

	L_Ident        shift, and enter state 2

	Ident          goto state 9

State 7

	Init -> 'var' . Ident ':' Type '=' Expr ';'         (rule 13)

	L_Ident        shift, and enter state 2

	Ident          goto state 8

State 8

	Init -> 'var' Ident . ':' Type '=' Expr ';'         (rule 13)

	':'            shift, and enter state 12


State 9

	Init -> 'fun' Ident . '(' ListArg ')' ':' Type Block    (rule 12)

	'('            shift, and enter state 11


State 10

	ListInit -> Init ListInit .                         (rule 6)

	%eof           reduce using rule 6


State 11

	Init -> 'fun' Ident '(' . ListArg ')' ':' Type Block    (rule 12)

	')'            reduce using rule 9
	'var'          shift, and enter state 23
	L_Ident        shift, and enter state 2

	Ident          goto state 20
	Arg            goto state 21
	ListArg        goto state 22

State 12

	Init -> 'var' Ident ':' . Type '=' Expr ';'         (rule 13)

	'('            shift, and enter state 15
	'Bool'         shift, and enter state 16
	'Int'          shift, and enter state 17
	'String'       shift, and enter state 18
	'Void'         shift, and enter state 19
	L_Ident        shift, and enter state 2

	Ident          goto state 13
	Type           goto state 14

State 13

	Type -> Ident .                                     (rule 33)

	')'            reduce using rule 33
	','            reduce using rule 33
	'='            reduce using rule 33
	'{'            reduce using rule 33


State 14

	Init -> 'var' Ident ':' Type . '=' Expr ';'         (rule 13)

	'='            shift, and enter state 30


State 15

	Type -> '(' . ListType ')' '->' Type                (rule 34)

	'('            shift, and enter state 15
	')'            reduce using rule 35
	'Bool'         shift, and enter state 16
	'Int'          shift, and enter state 17
	'String'       shift, and enter state 18
	'Void'         shift, and enter state 19
	L_Ident        shift, and enter state 2

	Ident          goto state 13
	Type           goto state 28
	ListType       goto state 29

State 16

	Type -> 'Bool' .                                    (rule 31)

	')'            reduce using rule 31
	','            reduce using rule 31
	'='            reduce using rule 31
	'{'            reduce using rule 31


State 17

	Type -> 'Int' .                                     (rule 29)

	')'            reduce using rule 29
	','            reduce using rule 29
	'='            reduce using rule 29
	'{'            reduce using rule 29


State 18

	Type -> 'String' .                                  (rule 30)

	')'            reduce using rule 30
	','            reduce using rule 30
	'='            reduce using rule 30
	'{'            reduce using rule 30


State 19

	Type -> 'Void' .                                    (rule 32)

	')'            reduce using rule 32
	','            reduce using rule 32
	'='            reduce using rule 32
	'{'            reduce using rule 32


State 20

	Arg -> Ident . ':' Type                             (rule 7)

	':'            shift, and enter state 27


State 21

	ListArg -> Arg .                                    (rule 10)
	ListArg -> Arg . ',' ListArg                        (rule 11)

	')'            reduce using rule 10
	','            shift, and enter state 26


State 22

	Init -> 'fun' Ident '(' ListArg . ')' ':' Type Block    (rule 12)

	')'            shift, and enter state 25


State 23

	Arg -> 'var' . Ident ':' Type                       (rule 8)

	L_Ident        shift, and enter state 2

	Ident          goto state 24

State 24

	Arg -> 'var' Ident . ':' Type                       (rule 8)

	':'            shift, and enter state 55


State 25

	Init -> 'fun' Ident '(' ListArg ')' . ':' Type Block    (rule 12)

	':'            shift, and enter state 54


State 26

	ListArg -> Arg ',' . ListArg                        (rule 11)

	')'            reduce using rule 9
	'var'          shift, and enter state 23
	L_Ident        shift, and enter state 2

	Ident          goto state 20
	Arg            goto state 21
	ListArg        goto state 53

State 27

	Arg -> Ident ':' . Type                             (rule 7)

	'('            shift, and enter state 15
	'Bool'         shift, and enter state 16
	'Int'          shift, and enter state 17
	'String'       shift, and enter state 18
	'Void'         shift, and enter state 19
	L_Ident        shift, and enter state 2

	Ident          goto state 13
	Type           goto state 52

State 28

	ListType -> Type .                                  (rule 36)
	ListType -> Type . ',' ListType                     (rule 37)

	')'            reduce using rule 36
	','            shift, and enter state 51


State 29

	Type -> '(' ListType . ')' '->' Type                (rule 34)

	')'            shift, and enter state 50


State 30

	Init -> 'var' Ident ':' Type '=' . Expr ';'         (rule 13)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	'lambda'       shift, and enter state 46
	'new'          shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 31
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 40

State 31

	Expr6 -> Ident .                                    (rule 38)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 42)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	'('            shift, and enter state 82
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'||'           reduce using rule 38


State 32

	Expr6 -> Integer .                                  (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'||'           reduce using rule 39


State 33

	Expr6 -> String .                                   (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 34

	Expr5 -> Expr6 .                                    (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 35

	Expr4 -> Expr5 .                                    (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 36

	Expr4 -> Expr4 . MulOp Expr5                        (rule 48)
	Expr3 -> Expr4 .                                    (rule 51)

	'!='           reduce using rule 51
	'%'            shift, and enter state 79
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            shift, and enter state 80
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            shift, and enter state 81
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51

	MulOp          goto state 78

State 37

	Expr3 -> Expr3 . AddOp Expr4                        (rule 50)
	Expr2 -> Expr3 .                                    (rule 53)

	'!='           reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'+'            shift, and enter state 76
	','            reduce using rule 53
	'-'            shift, and enter state 77
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'||'           reduce using rule 53

	AddOp          goto state 75

State 38

	Expr2 -> Expr2 . RelOp Expr3                        (rule 52)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 54)
	Expr1 -> Expr2 .                                    (rule 55)

	'!='           shift, and enter state 68
	'&&'           shift, and enter state 69
	')'            reduce using rule 55
	','            reduce using rule 55
	';'            reduce using rule 55
	'<'            shift, and enter state 70
	'<='           shift, and enter state 71
	'=='           shift, and enter state 72
	'>'            shift, and enter state 73
	'>='           shift, and enter state 74
	'||'           reduce using rule 55

	RelOp          goto state 67

State 39

	Expr -> Expr1 . '||' Expr                           (rule 56)
	Expr -> Expr1 .                                     (rule 59)

	')'            reduce using rule 59
	','            reduce using rule 59
	';'            reduce using rule 59
	'||'           shift, and enter state 66


State 40

	Init -> 'var' Ident ':' Type '=' Expr . ';'         (rule 13)

	';'            shift, and enter state 65


State 41

	Expr5 -> '!' . Expr6                                (rule 46)

	'('            shift, and enter state 42
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 31
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 64

State 42

	Expr6 -> '(' . Expr ')'                             (rule 44)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	'lambda'       shift, and enter state 46
	'new'          shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 31
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 63

State 43

	Expr5 -> '-' . Expr6                                (rule 45)

	'('            shift, and enter state 42
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 31
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 62

State 44

	Expr6 -> 'False' .                                  (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'||'           reduce using rule 41


State 45

	Expr6 -> 'True' .                                   (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'||'           reduce using rule 40


State 46

	Expr -> 'lambda' . '(' ListArg ')' '=>' Block       (rule 58)

	'('            shift, and enter state 61


State 47

	Expr -> 'new' . Ident '(' ListExpr ')'              (rule 57)

	L_Ident        shift, and enter state 2

	Ident          goto state 60

State 48

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 49

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 50

	Type -> '(' ListType ')' . '->' Type                (rule 34)

	'->'           shift, and enter state 59


State 51

	ListType -> Type ',' . ListType                     (rule 37)

	'('            shift, and enter state 15
	')'            reduce using rule 35
	'Bool'         shift, and enter state 16
	'Int'          shift, and enter state 17
	'String'       shift, and enter state 18
	'Void'         shift, and enter state 19
	L_Ident        shift, and enter state 2

	Ident          goto state 13
	Type           goto state 28
	ListType       goto state 58

State 52

	Arg -> Ident ':' Type .                             (rule 7)

	')'            reduce using rule 7
	','            reduce using rule 7


State 53

	ListArg -> Arg ',' ListArg .                        (rule 11)

	')'            reduce using rule 11


State 54

	Init -> 'fun' Ident '(' ListArg ')' ':' . Type Block    (rule 12)

	'('            shift, and enter state 15
	'Bool'         shift, and enter state 16
	'Int'          shift, and enter state 17
	'String'       shift, and enter state 18
	'Void'         shift, and enter state 19
	L_Ident        shift, and enter state 2

	Ident          goto state 13
	Type           goto state 57

State 55

	Arg -> 'var' Ident ':' . Type                       (rule 8)

	'('            shift, and enter state 15
	'Bool'         shift, and enter state 16
	'Int'          shift, and enter state 17
	'String'       shift, and enter state 18
	'Void'         shift, and enter state 19
	L_Ident        shift, and enter state 2

	Ident          goto state 13
	Type           goto state 56

State 56

	Arg -> 'var' Ident ':' Type .                       (rule 8)

	')'            reduce using rule 8
	','            reduce using rule 8


State 57

	Init -> 'fun' Ident '(' ListArg ')' ':' Type . Block    (rule 12)

	'{'            shift, and enter state 95

	Block          goto state 94

State 58

	ListType -> Type ',' ListType .                     (rule 37)

	')'            reduce using rule 37


State 59

	Type -> '(' ListType ')' '->' . Type                (rule 34)

	'('            shift, and enter state 15
	'Bool'         shift, and enter state 16
	'Int'          shift, and enter state 17
	'String'       shift, and enter state 18
	'Void'         shift, and enter state 19
	L_Ident        shift, and enter state 2

	Ident          goto state 13
	Type           goto state 93

State 60

	Expr -> 'new' Ident . '(' ListExpr ')'              (rule 57)

	'('            shift, and enter state 92


State 61

	Expr -> 'lambda' '(' . ListArg ')' '=>' Block       (rule 58)

	')'            reduce using rule 9
	'var'          shift, and enter state 23
	L_Ident        shift, and enter state 2

	Ident          goto state 20
	Arg            goto state 21
	ListArg        goto state 91

State 62

	Expr5 -> '-' Expr6 .                                (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45


State 63

	Expr6 -> '(' Expr . ')'                             (rule 44)

	')'            shift, and enter state 90


State 64

	Expr5 -> '!' Expr6 .                                (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46


State 65

	Init -> 'var' Ident ':' Type '=' Expr ';' .         (rule 13)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'False'        reduce using rule 13
	'True'         reduce using rule 13
	'fun'          reduce using rule 13
	'if'           reduce using rule 13
	'lambda'       reduce using rule 13
	'new'          reduce using rule 13
	'return'       reduce using rule 13
	'var'          reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_Ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_quoted       reduce using rule 13
	%eof           reduce using rule 13


State 66

	Expr -> Expr1 '||' . Expr                           (rule 56)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	'lambda'       shift, and enter state 46
	'new'          shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 31
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 89

State 67

	Expr2 -> Expr2 RelOp . Expr3                        (rule 52)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 31
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 88

State 68

	RelOp -> '!=' .                                     (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'False'        reduce using rule 73
	'True'         reduce using rule 73
	L_Ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 69

	Expr1 -> Expr2 '&&' . Expr1                         (rule 54)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 31
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 87

State 70

	RelOp -> '<' .                                      (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'False'        reduce using rule 68
	'True'         reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 71

	RelOp -> '<=' .                                     (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'False'        reduce using rule 69
	'True'         reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 72

	RelOp -> '==' .                                     (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'False'        reduce using rule 72
	'True'         reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 73

	RelOp -> '>' .                                      (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'False'        reduce using rule 70
	'True'         reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 74

	RelOp -> '>=' .                                     (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'False'        reduce using rule 71
	'True'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 75

	Expr3 -> Expr3 AddOp . Expr4                        (rule 50)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 31
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 86

State 76

	AddOp -> '+' .                                      (rule 63)

	'!'            reduce using rule 63
	'('            reduce using rule 63
	'-'            reduce using rule 63
	'False'        reduce using rule 63
	'True'         reduce using rule 63
	L_Ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63


State 77

	AddOp -> '-' .                                      (rule 64)

	'!'            reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'False'        reduce using rule 64
	'True'         reduce using rule 64
	L_Ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64


State 78

	Expr4 -> Expr4 MulOp . Expr5                        (rule 48)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 31
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 34
	Expr5          goto state 85

State 79

	MulOp -> '%' .                                      (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'False'        reduce using rule 67
	'True'         reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 80

	MulOp -> '*' .                                      (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'False'        reduce using rule 65
	'True'         reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 81

	MulOp -> '/' .                                      (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'False'        reduce using rule 66
	'True'         reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 82

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 42)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	')'            reduce using rule 60
	'-'            shift, and enter state 43
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	'lambda'       shift, and enter state 46
	'new'          shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 31
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 83
	ListExpr       goto state 84

State 83

	ListExpr -> Expr .                                  (rule 61)
	ListExpr -> Expr . ',' ListExpr                     (rule 62)

	')'            reduce using rule 61
	','            shift, and enter state 109


State 84

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 42)

	')'            shift, and enter state 108


State 85

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48


State 86

	Expr4 -> Expr4 . MulOp Expr5                        (rule 48)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 50)

	'!='           reduce using rule 50
	'%'            shift, and enter state 79
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            shift, and enter state 80
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            shift, and enter state 81
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50

	MulOp          goto state 78

State 87

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 54)

	')'            reduce using rule 54
	','            reduce using rule 54
	';'            reduce using rule 54
	'||'           reduce using rule 54


State 88

	Expr3 -> Expr3 . AddOp Expr4                        (rule 50)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 52)

	'!='           reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'+'            shift, and enter state 76
	','            reduce using rule 52
	'-'            shift, and enter state 77
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52

	AddOp          goto state 75

State 89

	Expr -> Expr1 '||' Expr .                           (rule 56)

	')'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56


State 90

	Expr6 -> '(' Expr ')' .                             (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44


State 91

	Expr -> 'lambda' '(' ListArg . ')' '=>' Block       (rule 58)

	')'            shift, and enter state 107


State 92

	Expr -> 'new' Ident '(' . ListExpr ')'              (rule 57)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	')'            reduce using rule 60
	'-'            shift, and enter state 43
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	'lambda'       shift, and enter state 46
	'new'          shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 31
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 83
	ListExpr       goto state 106

State 93

	Type -> '(' ListType ')' '->' Type .                (rule 34)

	')'            reduce using rule 34
	','            reduce using rule 34
	'='            reduce using rule 34
	'{'            reduce using rule 34


State 94

	Init -> 'fun' Ident '(' ListArg ')' ':' Type Block .    (rule 12)

	'!'            reduce using rule 12
	'('            reduce using rule 12
	'-'            reduce using rule 12
	';'            reduce using rule 12
	'False'        reduce using rule 12
	'True'         reduce using rule 12
	'fun'          reduce using rule 12
	'if'           reduce using rule 12
	'lambda'       reduce using rule 12
	'new'          reduce using rule 12
	'return'       reduce using rule 12
	'var'          reduce using rule 12
	'while'        reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	L_Ident        reduce using rule 12
	L_integ        reduce using rule 12
	L_quoted       reduce using rule 12
	%eof           reduce using rule 12


State 95

	Block -> '{' . ListStmt '}'                         (rule 14)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	';'            shift, and enter state 102
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	'fun'          shift, and enter state 6
	'if'           shift, and enter state 103
	'lambda'       shift, and enter state 46
	'new'          shift, and enter state 47
	'return'       shift, and enter state 104
	'var'          shift, and enter state 7
	'while'        shift, and enter state 105
	'{'            shift, and enter state 95
	'}'            reduce using rule 27
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 96
	Integer        goto state 32
	String         goto state 33
	Init           goto state 97
	Block          goto state 98
	Stmt           goto state 99
	ListStmt       goto state 100
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 101

State 96

	Stmt -> Ident . '=' Expr ';'                        (rule 18)
	Stmt -> Ident . '++' ';'                            (rule 19)
	Stmt -> Ident . '--' ';'                            (rule 20)
	Expr6 -> Ident .                                    (rule 38)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 42)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	'('            shift, and enter state 82
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	'++'           shift, and enter state 120
	'-'            reduce using rule 38
	'--'           shift, and enter state 121
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'='            shift, and enter state 122
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'||'           reduce using rule 38


State 97

	Stmt -> Init .                                      (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'False'        reduce using rule 17
	'True'         reduce using rule 17
	'fun'          reduce using rule 17
	'if'           reduce using rule 17
	'lambda'       reduce using rule 17
	'new'          reduce using rule 17
	'return'       reduce using rule 17
	'var'          reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17


State 98

	Stmt -> Block .                                     (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'False'        reduce using rule 16
	'True'         reduce using rule 16
	'fun'          reduce using rule 16
	'if'           reduce using rule 16
	'lambda'       reduce using rule 16
	'new'          reduce using rule 16
	'return'       reduce using rule 16
	'var'          reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16


State 99

	ListStmt -> Stmt . ListStmt                         (rule 28)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	';'            shift, and enter state 102
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	'fun'          shift, and enter state 6
	'if'           shift, and enter state 103
	'lambda'       shift, and enter state 46
	'new'          shift, and enter state 47
	'return'       shift, and enter state 104
	'var'          shift, and enter state 7
	'while'        shift, and enter state 105
	'{'            shift, and enter state 95
	'}'            reduce using rule 27
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 96
	Integer        goto state 32
	String         goto state 33
	Init           goto state 97
	Block          goto state 98
	Stmt           goto state 99
	ListStmt       goto state 119
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 101

State 100

	Block -> '{' ListStmt . '}'                         (rule 14)

	'}'            shift, and enter state 118


State 101

	Stmt -> Expr . ';'                                  (rule 26)

	';'            shift, and enter state 117


State 102

	Stmt -> ';' .                                       (rule 15)

	'!'            reduce using rule 15
	'('            reduce using rule 15
	'-'            reduce using rule 15
	';'            reduce using rule 15
	'False'        reduce using rule 15
	'True'         reduce using rule 15
	'fun'          reduce using rule 15
	'if'           reduce using rule 15
	'lambda'       reduce using rule 15
	'new'          reduce using rule 15
	'return'       reduce using rule 15
	'var'          reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15
	L_integ        reduce using rule 15
	L_quoted       reduce using rule 15


State 103

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 23)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 24)

	'('            shift, and enter state 116


State 104

	Stmt -> 'return' . Expr ';'                         (rule 21)
	Stmt -> 'return' . ';'                              (rule 22)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	';'            shift, and enter state 115
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	'lambda'       shift, and enter state 46
	'new'          shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 31
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 114

State 105

	Stmt -> 'while' . '(' Expr ')' Block                (rule 25)

	'('            shift, and enter state 113


State 106

	Expr -> 'new' Ident '(' ListExpr . ')'              (rule 57)

	')'            shift, and enter state 112


State 107

	Expr -> 'lambda' '(' ListArg ')' . '=>' Block       (rule 58)

	'=>'           shift, and enter state 111


State 108

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42


State 109

	ListExpr -> Expr ',' . ListExpr                     (rule 62)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	')'            reduce using rule 60
	'-'            shift, and enter state 43
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	'lambda'       shift, and enter state 46
	'new'          shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 31
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 83
	ListExpr       goto state 110

State 110

	ListExpr -> Expr ',' ListExpr .                     (rule 62)

	')'            reduce using rule 62


State 111

	Expr -> 'lambda' '(' ListArg ')' '=>' . Block       (rule 58)

	'{'            shift, and enter state 95

	Block          goto state 129

State 112

	Expr -> 'new' Ident '(' ListExpr ')' .              (rule 57)

	')'            reduce using rule 57
	','            reduce using rule 57
	';'            reduce using rule 57


State 113

	Stmt -> 'while' '(' . Expr ')' Block                (rule 25)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	'lambda'       shift, and enter state 46
	'new'          shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 31
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 128

State 114

	Stmt -> 'return' Expr . ';'                         (rule 21)

	';'            shift, and enter state 127


State 115

	Stmt -> 'return' ';' .                              (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'False'        reduce using rule 22
	'True'         reduce using rule 22
	'fun'          reduce using rule 22
	'if'           reduce using rule 22
	'lambda'       reduce using rule 22
	'new'          reduce using rule 22
	'return'       reduce using rule 22
	'var'          reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 116

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 23)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 24)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	'lambda'       shift, and enter state 46
	'new'          shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 31
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 126

State 117

	Stmt -> Expr ';' .                                  (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'False'        reduce using rule 26
	'True'         reduce using rule 26
	'fun'          reduce using rule 26
	'if'           reduce using rule 26
	'lambda'       reduce using rule 26
	'new'          reduce using rule 26
	'return'       reduce using rule 26
	'var'          reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 118

	Block -> '{' ListStmt '}' .                         (rule 14)

	'!'            reduce using rule 14
	'('            reduce using rule 14
	')'            reduce using rule 14
	','            reduce using rule 14
	'-'            reduce using rule 14
	';'            reduce using rule 14
	'False'        reduce using rule 14
	'True'         reduce using rule 14
	'else'         reduce using rule 14
	'fun'          reduce using rule 14
	'if'           reduce using rule 14
	'lambda'       reduce using rule 14
	'new'          reduce using rule 14
	'return'       reduce using rule 14
	'var'          reduce using rule 14
	'while'        reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	L_Ident        reduce using rule 14
	L_integ        reduce using rule 14
	L_quoted       reduce using rule 14
	%eof           reduce using rule 14


State 119

	ListStmt -> Stmt ListStmt .                         (rule 28)

	'}'            reduce using rule 28


State 120

	Stmt -> Ident '++' . ';'                            (rule 19)

	';'            shift, and enter state 125


State 121

	Stmt -> Ident '--' . ';'                            (rule 20)

	';'            shift, and enter state 124


State 122

	Stmt -> Ident '=' . Expr ';'                        (rule 18)

	'!'            shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	'lambda'       shift, and enter state 46
	'new'          shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 31
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 123

State 123

	Stmt -> Ident '=' Expr . ';'                        (rule 18)

	';'            shift, and enter state 132


State 124

	Stmt -> Ident '--' ';' .                            (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'False'        reduce using rule 20
	'True'         reduce using rule 20
	'fun'          reduce using rule 20
	'if'           reduce using rule 20
	'lambda'       reduce using rule 20
	'new'          reduce using rule 20
	'return'       reduce using rule 20
	'var'          reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 125

	Stmt -> Ident '++' ';' .                            (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'False'        reduce using rule 19
	'True'         reduce using rule 19
	'fun'          reduce using rule 19
	'if'           reduce using rule 19
	'lambda'       reduce using rule 19
	'new'          reduce using rule 19
	'return'       reduce using rule 19
	'var'          reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 126

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 23)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 24)

	')'            shift, and enter state 131


State 127

	Stmt -> 'return' Expr ';' .                         (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'False'        reduce using rule 21
	'True'         reduce using rule 21
	'fun'          reduce using rule 21
	'if'           reduce using rule 21
	'lambda'       reduce using rule 21
	'new'          reduce using rule 21
	'return'       reduce using rule 21
	'var'          reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 128

	Stmt -> 'while' '(' Expr . ')' Block                (rule 25)

	')'            shift, and enter state 130


State 129

	Expr -> 'lambda' '(' ListArg ')' '=>' Block .       (rule 58)

	')'            reduce using rule 58
	','            reduce using rule 58
	';'            reduce using rule 58


State 130

	Stmt -> 'while' '(' Expr ')' . Block                (rule 25)

	'{'            shift, and enter state 95

	Block          goto state 134

State 131

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 23)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 24)

	'{'            shift, and enter state 95

	Block          goto state 133

State 132

	Stmt -> Ident '=' Expr ';' .                        (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'False'        reduce using rule 18
	'True'         reduce using rule 18
	'fun'          reduce using rule 18
	'if'           reduce using rule 18
	'lambda'       reduce using rule 18
	'new'          reduce using rule 18
	'return'       reduce using rule 18
	'var'          reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 133

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 23)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 24)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'False'        reduce using rule 23
	'True'         reduce using rule 23
	'else'         shift, and enter state 135
	'fun'          reduce using rule 23
	'if'           reduce using rule 23
	'lambda'       reduce using rule 23
	'new'          reduce using rule 23
	'return'       reduce using rule 23
	'var'          reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 134

	Stmt -> 'while' '(' Expr ')' Block .                (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'False'        reduce using rule 25
	'True'         reduce using rule 25
	'fun'          reduce using rule 25
	'if'           reduce using rule 25
	'lambda'       reduce using rule 25
	'new'          reduce using rule 25
	'return'       reduce using rule 25
	'var'          reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 135

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 24)

	'{'            shift, and enter state 95

	Block          goto state 136

State 136

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'False'        reduce using rule 24
	'True'         reduce using rule 24
	'fun'          reduce using rule 24
	'if'           reduce using rule 24
	'lambda'       reduce using rule 24
	'new'          reduce using rule 24
	'return'       reduce using rule 24
	'var'          reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 74
Number of terminals: 43
Number of non-terminals: 25
Number of states: 137
